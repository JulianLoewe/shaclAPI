<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:test3="http://example.org/testGraph3#"
  xmlns:test4="http://example.org/testGraph4#"
  xmlns:test2="http://example.org/testGraph2#"
  xmlns:test1="http://example.org/testGraph1#"
>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_12">
    <test1:has>nonshape_value2</test1:has>
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_2">
        <test1:has>nonshape_value1</test1:has>
        <test1:has>nonshape_value2</test1:has>
      </test1:classE>
    </test1:belongsTo>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_7">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_0">
        <test1:has>nonshape_value1</test1:has>
        <test1:has>nonshape_value2</test1:has>
      </test1:classE>
    </test1:belongsTo>
  </test1:classA>
  <test4:classA rdf:about="http://example.org/testGraph4#nodeA_16"/>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_7">
    <test2:refersToD>
      <test2:classD rdf:about="http://example.org/testGraph2#nodeD_0">
        <test2:hasLiteral>valid_value</test2:hasLiteral>
      </test2:classD>
    </test2:refersToD>
    <test2:refersToB>
      <test2:classB rdf:about="http://example.org/testGraph2#nodeB_1"/>
    </test2:refersToB>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_6">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_19">
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_4">
        <test1:has>nonshape_value2</test1:has>
        <test1:has>nonshape_value1</test1:has>
      </test1:classE>
    </test1:belongsTo>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_13">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_5">
        <test1:has>nonshape_value1</test1:has>
      </test1:classE>
    </test1:belongsTo>
    <test1:has>nonshape_value2</test1:has>
  </test1:classA>
  <test4:classB rdf:about="http://example.org/testGraph4#nodeB_0">
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_1">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_0">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_4">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_7"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classC rdf:about="http://example.org/testGraph4#nodeC_0"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_5"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_2">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_6"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_8"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_9"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_3">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
  </test4:classB>
  <test4:classB rdf:about="http://example.org/testGraph4#nodeB_2">
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_14"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_11">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_12"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_13"/>
    </test4:refersTo>
    <test4:refersTo>
      <test4:classA rdf:about="http://example.org/testGraph4#nodeA_10">
        <test4:nonShapeLiteral>nonshape_value</test4:nonShapeLiteral>
      </test4:classA>
    </test4:refersTo>
  </test4:classB>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_6">
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_1"/>
    </test1:belongsTo>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_3">
    <test2:hasLiteral>valid_value</test2:hasLiteral>
    <test2:refersToB>
      <test2:classB rdf:about="http://example.org/testGraph2#nodeB_0">
        <test2:refersTo rdf:resource="http://example.org/testGraph2#nodeC_0"/>
      </test2:classB>
    </test2:refersToB>
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_14">
    <test1:has>nonshape_value2</test1:has>
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_5"/>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_8">
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_5">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_18">
    <test1:has>nonshape_value2</test1:has>
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_6">
        <test1:has>nonshape_value1</test1:has>
        <test1:has>nonshape_value2</test1:has>
      </test1:classE>
    </test1:belongsTo>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_4">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_0"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_9">
    <test1:belongsTo>
      <test1:classE rdf:about="http://example.org/testGraph1#nodeE_3">
        <test1:has>nonshape_value1</test1:has>
      </test1:classE>
    </test1:belongsTo>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test4:classB rdf:about="http://example.org/testGraph4#nodeB_1">
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_3"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_14"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_1"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_13"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_4"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeC_0"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_5"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_11"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_6"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_8"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_7"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_12"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_0"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_10"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_9"/>
    <test4:refersTo rdf:resource="http://example.org/testGraph4#nodeA_2"/>
  </test4:classB>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_19">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_10">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_3"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_0">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_0"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_0">
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_0"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_18">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_2">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_0"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_13">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_1">
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_0"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_11">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_2"/>
    <test1:has>nonshape_value2</test1:has>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_8">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_0"/>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_12">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_3">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_0"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_17">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_10">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_15">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_4">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_2"/>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_1">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_0"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_14">
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_9">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
    <test2:hasLiteral>valid_value</test2:hasLiteral>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_15">
    <test1:has>nonshape_value</test1:has>
    <test1:has>nonshape_value2</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_6"/>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_17">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_5"/>
    <test1:has>nonshape_value</test1:has>
    <test1:has>nonshape_value2</test1:has>
  </test1:classA>
  <test4:classA rdf:about="http://example.org/testGraph4#nodeA_19"/>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_16">
    <test1:has>nonshape_value2</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_5"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_5">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_2"/>
    <test1:has>nonshape_value</test1:has>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_11">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
    <test2:refersToB rdf:resource="http://example.org/testGraph2#nodeB_1"/>
  </test2:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_2">
    <test1:has>nonshape_value</test1:has>
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_0"/>
  </test1:classA>
  <test1:classA rdf:about="http://example.org/testGraph1#nodeA_20">
    <test1:belongsTo rdf:resource="http://example.org/testGraph1#nodeE_4"/>
  </test1:classA>
  <test2:classA rdf:about="http://example.org/testGraph2#nodeA_16">
    <test2:refersToD rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classA>
  <test4:classA rdf:about="http://example.org/testGraph4#nodeA_17"/>
  <test4:classA rdf:about="http://example.org/testGraph4#nodeA_18"/>
  <test4:classA rdf:about="http://example.org/testGraph4#nodeA_15"/>
  <test3:classA rdf:about="http://example.org/testGraph3#nodeA_2">
    <test3:alpha>
      <test3:classC rdf:about="http://example.org/testGraph3#nodeC_2">
        <test3:alpha rdf:resource="http://example.org/testGraph3#nodeD_0"/>
        <test3:alpha rdf:resource="http://example.org/testGraph3#nodeD_2"/>
      </test3:classC>
    </test3:alpha>
    <test3:beta>literal</test3:beta>
  </test3:classA>
  <test3:classC rdf:about="http://example.org/testGraph3#nodeC_0">
    <test3:alpha>
      <test3:classD rdf:about="http://example.org/testGraph3#nodeD_0">
        <test3:alpha rdf:resource="http://example.org/testGraph3#nodeA_0"/>
      </test3:classD>
    </test3:alpha>
  </test3:classC>
  <test3:classD rdf:about="http://example.org/testGraph3#nodeD_2">
    <test3:beta>literal</test3:beta>
    <test3:alpha rdf:resource="http://example.org/testGraph3#nodeA_2"/>
  </test3:classD>
  <test3:classD rdf:about="http://example.org/testGraph3#nodeD_1">
    <test3:alpha>
      <test3:classA rdf:about="http://example.org/testGraph3#nodeA_1">
        <test3:alpha rdf:resource="http://example.org/testGraph3#nodeC_1"/>
      </test3:classA>
    </test3:alpha>
    <test3:beta>literal</test3:beta>
  </test3:classD>
  <test2:classC rdf:about="http://example.org/testGraph2#nodeC_0">
    <test2:refersTo rdf:resource="http://example.org/testGraph2#nodeD_0"/>
  </test2:classC>
  <test3:classA rdf:about="http://example.org/testGraph3#nodeA_0">
    <test3:beta>literal</test3:beta>
    <test3:alpha rdf:resource="http://example.org/testGraph3#nodeC_0"/>
    <test3:alpha>
      <test3:classC rdf:about="http://example.org/testGraph3#nodeC_1">
        <test3:alpha rdf:resource="http://example.org/testGraph3#nodeD_1"/>
      </test3:classC>
    </test3:alpha>
  </test3:classA>
</rdf:RDF>
